import javax.xml.bind.JAXBContext
import javax.xml.bind.Unmarshaller
import java.io.StringReader

// Классы данных для JAXB
@javax.xml.bind.annotation.XmlRootElement(name = "students")
class Students {
    var student: List<Student>? = null
}

class Student {
    var first_name: String? = null
    var second_name: String? = null
    var skills: Skills? = null
}

class Skills {
    var skill: List<Skill>? = null
}

class Skill {
    @javax.xml.bind.annotation.XmlAttribute
    var hard: Boolean = false
    @javax.xml.bind.annotation.XmlAttribute
    var soft: Boolean = false
    @javax.xml.bind.annotation.XmlValue
    var value: String? = null
}

fun main() {
    val xmlData = """
<students>
<student>
<first_name>Viacheslav</first_name>
<second_name>Ivanov</second_name>
<skills>
<skill hard="true">Java</skill>
<skill hard="true">Kotlin</skill>
<skill hard="true">DevSecOps</skill>
<skill soft="true">English language</skill>
</skills>
</student>
<student>
<first_name>Peter</first_name>
<second_name>Sergeev</second_name>
<skills>
<skill hard="true">PHP</skill>
<skill hard="true">Backend</skill>
</skills>
</student>
<student>
<first_name>Maria</first_name>
<second_name>Gavrilovich</second_name>
<skills>
<skill hard="true">Project manager</skill>
<skill soft="true">Speaking</skill>
</skills>
</student>
</students>
"""

    val jaxbContext = JAXBContext.newInstance(Students::class.java)
    val unmarshaller: Unmarshaller = jaxbContext.createUnmarshaller()
    val students: Students = unmarshaller.unmarshal(StringReader(xmlData)) as Students

    students.student?.forEach {
        println("Student: ${it.first_name} ${it.second_name}")
        it.skills?.skill?.forEach { skill ->
            println(" - Skill: ${skill.value}, hard: ${skill.hard}, soft: ${skill.soft}")
        }
    }
}
